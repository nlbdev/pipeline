<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.daisy.org/ns/xprocspec/xprocspec.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec"
               xmlns:p="http://www.w3.org/ns/xproc"
               xmlns:px="http://www.daisy.org/ns/pipeline/xproc"
               xmlns:nlb="http://www.nlb.no/ns/pipeline/xproc"
               xmlns:pef="http://www.daisy.org/ns/2008/pef"
               xmlns:epub="http://www.idpf.org/2007/ops"
               script="http://www.nlb.no/pipeline/modules/braille/html-to-pef.xpl">
    
    <x:scenario label="titlepage">
        <x:call step="nlb:html-to-pef">
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="basic test of complete titlepage">
            <x:call step="nlb:html-to-pef">
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                                <section epub:type="bodymatter">
                                    <h1>bodymatter</h1>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('titlepage/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('titlepage/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('titlepage/1/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the pef">
                <x:document type="file" base-uri="temp-dir" href="titlepage/1/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="the PEF should be 28 rows high" type="xpath" test="(//pef:volume)[1]/@rows" equals="28"/>
            <x:expect label="the PEF should be 32 columns wide" type="xpath" test="(//pef:volume)[1]/@cols" equals="32"/>
            
            <x:context label="the rows on the first page of the pef">
                <x:document type="file" base-uri="temp-dir" href="titlepage/1/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row"/>
            </x:context>
            <x:expect label="the titlepage should be as expected" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠊⠞⠇⠑</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠠⠝⠇⠃⠀⠤⠀⠼⠃⠚⠁⠓</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠋⠥⠇⠇⠎⠅⠗⠊⠋⠞</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠓⠑⠋⠞⠑⠀⠼⠁⠀⠁⠧⠀⠼⠁</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        
        <x:scenario label="with existing titlepage">
            <x:call step="nlb:html-to-pef">
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                                
                                <section epub:type="frontmatter titlepage">
                                    <h1>existing titlepage</h1>
                                </section>
                                
                                <section epub:type="bodymatter">
                                    <h1>bodymatter</h1>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('titlepage/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('titlepage/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('titlepage/2/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the PEF">
                <x:document type="file" base-uri="temp-dir" href="titlepage/2/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="the existing titlepage should be deleted" type="xpath" test="not(contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'),'⠑⠭⠊⠎⠞⠊⠝⠛⠀⠞⠊⠞⠇⠑⠏⠁⠛⠑'))"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="author">
        <x:call step="nlb:html-to-pef">
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="1 author">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('author/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('author/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('author/1/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 4 to 6">
                <x:document type="file" base-uri="temp-dir" href="author/1/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 4 to 6]"/>
            </x:context>
            <x:expect label="should contain the author and two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="authors on about page">
                <x:document type="file" base-uri="temp-dir" href="author/1/pef-output-dir/book.pef" select="(//pef:page)[2]"/>
            </x:context>
            <x:expect label="there should be none" type="xpath" test="contains(., '⠠⠋⠕⠗⠋⠁⠞⠞⠑⠗')" equals="false()"/>
        </x:scenario>
        
        <x:scenario label="2 authors">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author 1"/>
                                <meta name="dc:creator" content="author 2"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('author/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('author/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('author/2/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 4 to 7">
                <x:document type="file" base-uri="temp-dir" href="author/2/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 4 to 7]"/>
            </x:context>
            <x:expect label="should contain the authors and two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠁</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠃</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        
        <x:scenario label="3 authors">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author 1"/>
                                <meta name="dc:creator" content="author 2"/>
                                <meta name="dc:creator" content="author 3"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('author/3/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('author/3/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('author/3/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 4 to 8">
                <x:document type="file" base-uri="temp-dir" href="author/3/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 4 to 8]"/>
            </x:context>
            <x:expect label="should contain the authors and two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠁</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠃</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠍⠋⠇⠄</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        
        <x:scenario label="4 authors">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author 1"/>
                                <meta name="dc:creator" content="author 2"/>
                                <meta name="dc:creator" content="author 3"/>
                                <meta name="dc:creator" content="author 4"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('author/4/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('author/4/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('author/4/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 4 to 8">
                <x:document type="file" base-uri="temp-dir" href="author/4/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 4 to 8]"/>
            </x:context>
            <x:expect label="should contain the first two authors, 'mfl.' on the third line, and then two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠁</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠃</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠍⠋⠇⠄</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="authors on about page">
                <x:document type="file" base-uri="temp-dir" href="author/4/pef-output-dir/book.pef" select="(//pef:page)[2]/(if (count(.//*[contains(.,'⠠⠋⠕⠗⠋⠁⠞⠞⠑⠗')])) then .//pef:row[contains(text(), '⠠⠋⠕⠗⠋⠁⠞⠞⠑⠗')]/(. | following-sibling::*[position() le 2]) else .//pef:row)"/>
            </x:context>
            <x:expect label="should all be listed in full" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠠⠋⠕⠗⠋⠁⠞⠞⠑⠗⠑⠒⠀⠁⠥⠞⠓⠕⠗⠀⠼⠁⠂</row>
                        <row>⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠃⠂⠀⠁⠥⠞⠓⠕⠗⠀⠼⠉⠀⠕⠛</row>
                        <row>⠀⠀⠁⠥⠞⠓⠕⠗⠀⠼⠙</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="title">
        <x:call step="nlb:html-to-pef">
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="long title that fits">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>So Long, and Thanks for All the Fish (Hitchhiker's Guide to the Galaxy #4)</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('title/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('title/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('title/1/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 7 to 13">
                <x:document type="file" base-uri="temp-dir" href="title/1/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 7 to 13]"/>
            </x:context>
            <x:expect label="should contain the author and two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠠⠎⠕⠀⠠⠇⠕⠝⠛⠂⠀⠁⠝⠙⠀⠠⠞⠓⠁⠝⠅⠎⠀⠋⠕⠗</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠁⠇⠇⠀⠞⠓⠑⠀⠠⠋⠊⠎⠓</row>
                        <row>⠀⠀⠀⠀⠦⠠⠓⠊⠞⠉⠓⠓⠊⠅⠑⠗⠐⠎⠀⠠⠛⠥⠊⠙⠑⠀⠞⠕</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠞⠓⠑⠀⠠⠛⠁⠇⠁⠭⠽⠀⠼⠼⠙⠴</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="full title on about page">
                <x:document type="file" base-uri="temp-dir" href="title/1/pef-output-dir/book.pef" select="(//pef:page)[2]//*[contains(.,'⠠⠋⠥⠇⠇⠀⠞⠊⠞⠞⠑⠇')]"/>
            </x:context>
            <x:expect label="should not be listed" type="count" max="0"/>
        </x:scenario>
        <x:scenario label="long title that does not fit">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>No Matter How Much You Promise to Cook or Pay the Rent You Blew It Cauze Bill Bailey Ain't Never Coming Home Again</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('title/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('title/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('title/2/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 7 to 13">
                <x:document type="file" base-uri="temp-dir" href="title/2/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 7 to 13]"/>
            </x:context>
            <x:expect label="should contain the author and two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠠⠝⠕⠀⠠⠍⠁⠞⠞⠑⠗⠀⠠⠓⠕⠺⠀⠠⠍⠥⠉⠓</row>
                        <row>⠀⠀⠀⠀⠠⠽⠕⠥⠀⠠⠏⠗⠕⠍⠊⠎⠑⠀⠞⠕⠀⠠⠉⠕⠕⠅⠀⠕⠗</row>
                        <row>⠀⠀⠀⠀⠠⠏⠁⠽⠀⠞⠓⠑⠀⠠⠗⠑⠝⠞⠀⠠⠽⠕⠥⠀⠠⠃⠇⠑⠺</row>
                        <row>⠀⠀⠀⠀⠠⠊⠞⠀⠠⠉⠁⠥⠵⠑⠀⠠⠃⠊⠇⠇⠀⠠⠃⠁⠊⠇⠑⠽</row>
                        <row>⠀⠀⠀⠀⠠⠁⠊⠝⠐⠞⠀⠠⠝⠑⠧⠑⠗⠀⠠⠉⠕⠍⠊⠝⠛⠄⠄⠄</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="full title on about page">
                <x:document type="file" base-uri="temp-dir" href="title/2/pef-output-dir/book.pef" select="(//pef:page)[2]/(if (count(.//*[contains(.,'⠠⠋⠥⠇⠇⠀⠞⠊⠞⠞⠑⠇')])) then .//pef:row[contains(text(), '⠠⠋⠥⠇⠇⠀⠞⠊⠞⠞⠑⠇')]/(. | following-sibling::*[position() le 5]) else .//pef:row)"/>
            </x:context>
            <x:expect label="should be listed in full" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠠⠋⠥⠇⠇⠀⠞⠊⠞⠞⠑⠇⠒⠀⠠⠝⠕⠀⠠⠍⠁⠞⠞⠑⠗</row>
                        <row>⠀⠀⠠⠓⠕⠺⠀⠠⠍⠥⠉⠓⠀⠠⠽⠕⠥⠀⠠⠏⠗⠕⠍⠊⠎⠑⠀⠞⠕</row>
                        <row>⠀⠀⠠⠉⠕⠕⠅⠀⠕⠗⠀⠠⠏⠁⠽⠀⠞⠓⠑⠀⠠⠗⠑⠝⠞⠀⠠⠽⠕⠥</row>
                        <row>⠀⠀⠠⠃⠇⠑⠺⠀⠠⠊⠞⠀⠠⠉⠁⠥⠵⠑⠀⠠⠃⠊⠇⠇</row>
                        <row>⠀⠀⠠⠃⠁⠊⠇⠑⠽⠀⠠⠁⠊⠝⠐⠞⠀⠠⠝⠑⠧⠑⠗⠀⠠⠉⠕⠍⠊⠝⠛</row>
                        <row>⠀⠀⠠⠓⠕⠍⠑⠀⠠⠁⠛⠁⠊⠝</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        <x:scenario label="long title that fits but words have to be broken">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>Floccinaucinihilipilification of supercalifragilisticexpialidocious expressions</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('title/3/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('title/3/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('title/3/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 7 to 13">
                <x:document type="file" base-uri="temp-dir" href="title/3/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 7 to 13]"/>
            </x:context>
            <x:expect label="should contain the author and two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠠⠋⠇⠕⠉⠉⠊⠝⠁⠥⠉⠊⠝⠊⠓⠊⠇⠊⠏</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠊⠇⠊⠋⠊⠉⠁⠞⠊⠕⠝⠀⠕⠋</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠎⠥⠏⠑⠗⠉⠁⠇⠊⠋⠗⠁⠛⠊⠇⠊⠎⠞</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠊⠉⠑⠭⠏⠊⠁⠇⠊⠙⠕⠉⠊⠕⠥⠎</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠭⠏⠗⠑⠎⠎⠊⠕⠝⠎</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        <x:scenario label="long title that does not fit with words that have to be broken">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>Floccinaucinihilipilification of supercalifragilisticexpialidocious expressions and its strenghts with regards to incomprehensibilities</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('title/4/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('title/4/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('title/4/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 7 to 13">
                <x:document type="file" base-uri="temp-dir" href="title/4/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 7 to 13]"/>
            </x:context>
            <x:expect label="should contain the author and two empty lines" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠠⠋⠇⠕⠉⠉⠊⠝⠁⠥⠉⠊⠝⠊⠓⠊⠇⠊⠏</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠊⠇⠊⠋⠊⠉⠁⠞⠊⠕⠝⠀⠕⠋</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠎⠥⠏⠑⠗⠉⠁⠇⠊⠋⠗⠁⠛⠊⠇⠊⠎⠞</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠊⠉⠑⠭⠏⠊⠁⠇⠊⠙⠕⠉⠊⠕⠥⠎</row>
                        <row>⠀⠀⠀⠀⠀⠑⠭⠏⠗⠑⠎⠎⠊⠕⠝⠎⠀⠁⠝⠙⠀⠊⠞⠎⠄⠄⠄</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="translator">
        <x:call step="nlb:html-to-pef">
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="1 translator">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                                <meta name="dc:contributor.translator" content="translator"/>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('translator/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('translator/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('translator/1/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 10 to 14">
                <x:document type="file" base-uri="temp-dir" href="translator/1/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 10 to 14]"/>
            </x:context>
            <x:expect label="should start with 'Oversatt av:', and then list the translator(s), and have two empty lines at the end" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠕⠧⠑⠗⠎⠁⠞⠞⠀⠁⠧⠒</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="translators on about page">
                <x:document type="file" base-uri="temp-dir" href="translator/1/pef-output-dir/book.pef" select="(//pef:page)[2]"/>
            </x:context>
            <x:expect label="there should be none" type="xpath" test="contains(., '⠠⠕⠧⠑⠗⠎⠁⠞⠞')" equals="false()"/>
        </x:scenario>
        
        <x:scenario label="2 translators">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                                <meta name="dc:contributor.translator" content="translator 1"/>
                                <meta name="dc:contributor.translator" content="translator 2"/>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('translator/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('translator/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('translator/2/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 10 to 14">
                <x:document type="file" base-uri="temp-dir" href="translator/2/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 10 to 14]"/>
            </x:context>
            <x:expect label="should start with 'Oversatt av:', and then list the translator(s), and have two empty lines at the end" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠕⠧⠑⠗⠎⠁⠞⠞⠀⠁⠧⠒</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠼⠁</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠼⠃</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        
        <x:scenario label="3 translators">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                                <meta name="dc:contributor.translator" content="translator 1"/>
                                <meta name="dc:contributor.translator" content="translator 2"/>
                                <meta name="dc:contributor.translator" content="translator 3"/>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('translator/3/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('translator/3/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('translator/3/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 10 to 14">
                <x:document type="file" base-uri="temp-dir" href="translator/3/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 10 to 14]"/>
            </x:context>
            <x:expect label="should start with 'Oversatt av:', and then list the translator(s), and have two empty lines at the end" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠕⠧⠑⠗⠎⠁⠞⠞⠀⠁⠧⠒</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠼⠁</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠍⠋⠇⠄</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="translators on about page">
                <x:document type="file" base-uri="temp-dir" href="translator/3/pef-output-dir/book.pef" select="(//pef:page)[2]/(if (count(.//*[contains(.,'⠠⠕⠧⠑⠗⠎⠁⠞⠞')])) then .//pef:row[contains(text(), '⠠⠕⠧⠑⠗⠎⠁⠞⠞')]/(. | following-sibling::*[position() le 2]) else .//pef:row)"/>
            </x:context>
            <x:expect label="should all be listed in full" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠠⠕⠧⠑⠗⠎⠁⠞⠞⠀⠁⠧⠒⠀⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗</row>
                        <row>⠀⠀⠼⠁⠂⠀⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠼⠃⠀⠕⠛</row>
                        <row>⠀⠀⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠼⠉</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        
        <x:scenario label="1 translator with a long name">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                                <meta name="dc:contributor.translator" content="Translator Translator Translator Translator Translator Translator"/>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('translator/4/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('translator/4/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('translator/4/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 10 to 14">
                <x:document type="file" base-uri="temp-dir" href="translator/4/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 10 to 14]"/>
            </x:context>
            <x:expect label="should start with 'Oversatt av:', and then list the translator(s), and have two empty lines at the end" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠕⠧⠑⠗⠎⠁⠞⠞⠀⠁⠧⠒</row>
                        <row>⠀⠀⠀⠀⠀⠠⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠠⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗</row>
                        <row>⠀⠀⠀⠀⠀⠠⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠠⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        
        <x:scenario label="2 translators with long names">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                                <meta name="dc:contributor.translator" content="Translator Translator Translator Translator"/>
                                <meta name="dc:contributor.translator" content="Translateur Translateur Translateur Translateur"/>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('translator/5/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('translator/5/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('translator/5/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="rows 10 to 14">
                <x:document type="file" base-uri="temp-dir" href="translator/5/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[position() = 10 to 14]"/>
            </x:context>
            <x:expect label="should start with 'Oversatt av:', and then list the translator(s), and have two empty lines at the end" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠕⠧⠑⠗⠎⠁⠞⠞⠀⠁⠧⠒</row>
                        <row>⠀⠀⠀⠀⠀⠠⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗⠀⠠⠞⠗⠁⠝⠎⠇⠁⠞⠕⠗</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠍⠋⠇⠄</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="nlb / year / contraction grade">
        <x:call step="nlb:html-to-pef">
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="grade:0">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('nlb-year-grade/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('nlb-year-grade/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('nlb-year-grade/1/temp-dir',$temp-dir)"/>
                <x:option name="braille-standard" select="'(dots:6)(grade:0)'"/>
            </x:call>
            
            <x:context label="the first page in the PEF">
                <x:document type="file" base-uri="temp-dir" href="nlb-year-grade/1/pef-output-dir/book.pef" select="(//pef:page)[1]"/>
            </x:context>
            <x:expect label="line 23 should contain 'NLB - {year}'" type="xpath" test="/*/pef:row[position() = 23]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="concat('⠠⠠⠝⠇⠃⠀⠤⠀⠼', replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(                                                      format-dateTime(current-dateTime(),'[Y]')                                                      ,'0','⠚'),'1','⠁'),'2','⠃'),'3','⠉'),'4','⠙'),'5','⠑'),'6','⠋'),'7','⠛'),'8','⠓'),'9','⠊'))"/>
            <x:expect label="line 24 should contain 'Fullskrift'" type="xpath" test="/*/pef:row[position() = 24]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="'⠠⠋⠥⠇⠇⠎⠅⠗⠊⠋⠞'"/>
            <x:expect label="line 25 should be empty" type="xpath" test="/*/pef:row[position() = 25]/replace(text(),'⠀','')" equals="''"/>
            <x:expect label="line 26 should be empty" type="xpath" test="/*/pef:row[position() = 26]/replace(text(),'⠀','')" equals="''"/>
        </x:scenario>
        
        <x:scenario label="grade:1">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('nlb-year-grade/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('nlb-year-grade/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('nlb-year-grade/2/temp-dir',$temp-dir)"/>
                <x:option name="braille-standard" select="'(dots:6)(grade:1)'"/>
            </x:call>
            
            <x:context label="the first page in the PEF">
                <x:document type="file" base-uri="temp-dir" href="nlb-year-grade/2/pef-output-dir/book.pef" select="(//pef:page)[1]"/>
            </x:context>
            <x:expect label="line 23 should contain 'NLB - {year}'" type="xpath" test="/*/pef:row[position() = 23]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="concat('⠠⠠⠝⠇⠃⠀⠤⠀⠼', replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(                                                      format-dateTime(current-dateTime(),'[Y]')                                                      ,'0','⠚'),'1','⠁'),'2','⠃'),'3','⠉'),'4','⠙'),'5','⠑'),'6','⠋'),'7','⠛'),'8','⠓'),'9','⠊'))"/>
            <x:expect label="line 24 should contain 'Kortskrift 1'" type="xpath" test="/*/pef:row[position() = 24]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="'⠠⠅⠕⠗⠞⠎⠅⠗⠊⠋⠞⠀⠼⠁'"/>
            <x:expect label="line 25 should be empty" type="xpath" test="/*/pef:row[position() = 25]/replace(text(),'⠀','')" equals="''"/>
            <x:expect label="line 26 should be empty" type="xpath" test="/*/pef:row[position() = 26]/replace(text(),'⠀','')" equals="''"/>
        </x:scenario>
        
        <x:scenario label="grade:2">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('nlb-year-grade/3/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('nlb-year-grade/3/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('nlb-year-grade/3/temp-dir',$temp-dir)"/>
                <x:option name="braille-standard" select="'(dots:6)(grade:2)'"/>
            </x:call>
            
            <x:context label="the first page in the PEF">
                <x:document type="file" base-uri="temp-dir" href="nlb-year-grade/3/pef-output-dir/book.pef" select="(//pef:page)[1]"/>
            </x:context>
            <x:expect label="line 23 should contain 'NLB - {year}'" type="xpath" test="/*/pef:row[position() = 23]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="concat('⠠⠠⠝⠇⠃⠀⠤⠀⠼', replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(                                                      format-dateTime(current-dateTime(),'[Y]')                                                      ,'0','⠚'),'1','⠁'),'2','⠃'),'3','⠉'),'4','⠙'),'5','⠑'),'6','⠋'),'7','⠛'),'8','⠓'),'9','⠊'))"/>
            <x:expect label="line 24 should contain 'Kortskrift 2'" type="xpath" test="/*/pef:row[position() = 24]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="'⠠⠅⠕⠗⠞⠎⠅⠗⠊⠋⠞⠀⠼⠃'"/>
            <x:expect label="line 25 should be empty" type="xpath" test="/*/pef:row[position() = 25]/replace(text(),'⠀','')" equals="''"/>
            <x:expect label="line 26 should be empty" type="xpath" test="/*/pef:row[position() = 26]/replace(text(),'⠀','')" equals="''"/>
        </x:scenario>
        
        <x:scenario label="grade:3">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('nlb-year-grade/4/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('nlb-year-grade/4/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('nlb-year-grade/4/temp-dir',$temp-dir)"/>
                <x:option name="braille-standard" select="'(dots:6)(grade:3)'"/>
            </x:call>
            
            <x:context label="the first page in the PEF">
                <x:document type="file" base-uri="temp-dir" href="nlb-year-grade/4/pef-output-dir/book.pef" select="(//pef:page)[1]"/>
            </x:context>
            <x:expect label="line 23 should contain 'NLB - {year}'" type="xpath" test="/*/pef:row[position() = 23]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="concat('⠠⠠⠝⠇⠃⠀⠤⠀⠼', replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(                                                      format-dateTime(current-dateTime(),'[Y]')                                                      ,'0','⠚'),'1','⠁'),'2','⠃'),'3','⠉'),'4','⠙'),'5','⠑'),'6','⠋'),'7','⠛'),'8','⠓'),'9','⠊'))"/>
            <x:expect label="line 24 should contain 'Kortskrift 3'" type="xpath" test="/*/pef:row[position() = 24]/replace(text(),'^⠀*([^⠀].*?) *$','$1')" equals="'⠠⠅⠕⠗⠞⠎⠅⠗⠊⠋⠞⠀⠼⠉'"/>
            <x:expect label="line 25 should be empty" type="xpath" test="/*/pef:row[position() = 25]/replace(text(),'⠀','')" equals="''"/>
            <x:expect label="line 26 should be empty" type="xpath" test="/*/pef:row[position() = 26]/replace(text(),'⠀','')" equals="''"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="volume">
        <x:call step="nlb:html-to-pef">
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="1 volume">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('volume/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('volume/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('volume/1/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="row 27 on first page of first volume">
                <x:document type="file" base-uri="temp-dir" href="volume/1/pef-output-dir/book.pef" select="(//pef:page)[1]/pef:row[27]"/>
            </x:context>
            <x:expect label="should contain 'Hefte 1 av 1'" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠓⠑⠋⠞⠑⠀⠼⠁⠀⠁⠧⠀⠼⠁</row>
                    </page>
                </x:document>
            </x:expect>
        </x:scenario>
        
        <x:scenario label="2 volumes">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                                <section epub:type="bodymatter part" class="part"/>
                                <section epub:type="bodymatter part" class="part"/>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('volume/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('volume/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('volume/2/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="row 27 on first page of first volume">
                <x:document type="file" base-uri="temp-dir" href="volume/2/pef-output-dir/book.pef" select="((//pef:volume)[1]//pef:page)[1]/pef:row[27]"/>
            </x:context>
            <x:expect label="should contain 'Hefte 1 av 2'" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠓⠑⠋⠞⠑⠀⠼⠁⠀⠁⠧⠀⠼⠃</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="row 27 on first page of second volume">
                <x:document type="file" base-uri="temp-dir" href="volume/2/pef-output-dir/book.pef" select="((//pef:volume)[2]//pef:page)[1]/pef:row[27]"/>
            </x:context>
            <x:expect label="should contain 'Hefte 2 av 2'" type="compare">
                <x:document type="inline" select="/*/*">
                    <page xmlns="http://www.daisy.org/ns/2008/pef">
                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠓⠑⠋⠞⠑⠀⠼⠃⠀⠁⠧⠀⠼⠃</row>
                    </page>
                </x:document>
            </x:expect>
            
            <x:context label="rows 1-26 on first page of first volume">
                <x:document type="file" base-uri="temp-dir" href="volume/2/pef-output-dir/book.pef" select="(//pef:volume)[1]/(.//pef:page)[1]/pef:row[position() &lt;= 26]"/>
            </x:context>
            <x:expect label="should equal rows 1-26 of the second volume" type="compare">
                <x:document type="file" base-uri="temp-dir" href="volume/2/pef-output-dir/book.pef" select="(//pef:volume)[2]/(.//pef:page)[1]/pef:row[position() &lt;= 26]"/>
            </x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="about page content">
        <x:call step="nlb:html-to-pef">
            <x:input port="source">
                <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                        <head>
                            <meta name="dc:creator" content="author"/>
                            <title>title</title>
                        </head>
                        <body>
                            
                        </body>
                    </html>
                </x:document>
            </x:input>
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="duplex">
            <x:call>
                <x:option name="pef-output-dir" select="resolve-uri('about/1/duplex/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('about/1/duplex/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('about/1/duplex/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="page 2">
                <x:document type="file" base-uri="temp-dir" href="about/1/duplex/pef-output-dir/book.pef" select="(//pef:page)[2]"/>
            </x:context>
            <x:expect label="should contain 'Om boka'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠕⠍⠀⠃⠕⠅⠁')"/>
            <x:expect label="should contain 'Antall sider'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠁⠝⠞⠁⠇⠇⠀⠎⠊⠙⠑⠗⠒⠀⠼')"/>
            <x:expect label="page count should be 4" type="xpath"
                      test="replace(.//pef:row[contains(.,'⠠⠁⠝⠞⠁⠇⠇⠀⠎⠊⠙⠑⠗⠒⠀⠼')],'.*(⠼[^⠀]+)','$1')" equals="'⠼⠙'"/>
            <x:expect label="should contain 'Boka skal ikke returneres.'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠃⠕⠅⠁⠀⠎⠅⠁⠇⠀⠊⠅⠅⠑⠀⠗⠑⠞⠥⠗⠝⠑⠗⠑⠎⠄')"/>
            <x:expect label="should contain 'Feil eller mangler kan meldes til punkt@nlb.no.'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠋⠑⠊⠇⠀⠑⠇⠇⠑⠗⠀⠍⠁⠝⠛⠇⠑⠗⠀⠅⠁⠝⠀⠍⠑⠇⠙⠑⠎⠀⠞⠊⠇⠀⠣⠏⠥⠝⠅⠞⠈⠝⠇⠃⠄⠝⠕⠄⠜')"/>
        </x:scenario>
        
        <x:scenario label="simplex">
            <x:call>
                <x:option name="pef-output-dir" select="resolve-uri('about/1/simplex/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('about/1/simplex/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('about/1/simplex/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="page 2">
                <x:document type="file" base-uri="temp-dir" href="about/1/simplex/pef-output-dir/book.pef" select="(//pef:page)[2]"/>
            </x:context>
            <x:expect label="should contain 'Om boka'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠕⠍⠀⠃⠕⠅⠁')"/>
            <x:expect label="should contain 'Antall sider'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠁⠝⠞⠁⠇⠇⠀⠎⠊⠙⠑⠗⠒⠀⠼')"/>
            <x:expect label="page count should be 4" type="xpath"
                      test="replace(.//pef:row[contains(.,'⠠⠁⠝⠞⠁⠇⠇⠀⠎⠊⠙⠑⠗⠒⠀⠼')],'.*(⠼[^⠀]+)','$1')" equals="'⠼⠙'"/>
            <x:expect label="should contain 'Boka skal ikke returneres.'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠃⠕⠅⠁⠀⠎⠅⠁⠇⠀⠊⠅⠅⠑⠀⠗⠑⠞⠥⠗⠝⠑⠗⠑⠎⠄')"/>
            <x:expect label="should contain 'Feil eller mangler kan meldes til punkt@nlb.no.'" type="xpath" test="contains(replace(string-join(.//pef:row/text(),'⠀'),'⠀+','⠀'), '⠠⠋⠑⠊⠇⠀⠑⠇⠇⠑⠗⠀⠍⠁⠝⠛⠇⠑⠗⠀⠅⠁⠝⠀⠍⠑⠇⠙⠑⠎⠀⠞⠊⠇⠀⠣⠏⠥⠝⠅⠞⠈⠝⠇⠃⠄⠝⠕⠄⠜')"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="toc">
        <x:call step="nlb:html-to-pef">
            <x:input port="source">
                <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                        <head>
                            
                            <meta name="dc:creator" content="author"/>
                            <title>title</title>
                        </head>
                        <body>
                            
                            <section epub:type="bodymatter">
                                <h1>h1-1 short</h1>
                                
                                <section>
                                    <h2>h2-1</h2>
                                    
                                    <section>
                                        <h3>h3-1</h3>
                                    </section>
                                    
                                    <section>
                                        <h3>h3-2</h3>
                                    </section>
                                </section>
                                
                                <section>
                                    <h2>h2-2</h2>
                                </section>
                            </section>
                            <section epub:type="bodymatter">
                                <h1>h1-2 long headline</h1>
                            </section>
                        </body>
                    </html>
                </x:document>
            </x:input>
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="toc-depth=0">
            <x:call>
                <x:option name="toc-depth" select="0"/>
                <x:option name="pef-output-dir" select="resolve-uri('toc/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/1/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the first page containing 'Innhold'">
                <x:document type="file" base-uri="temp-dir" href="toc/1/pef-output-dir/book.pef" select="(//pef:page[contains(string-join(.//text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])[1]"/>
            </x:context>
            <x:expect label="there should not be a TOC" type="count" max="0"/>
        </x:scenario>
        
        <x:scenario label="toc-depth=1">
            <x:call>
                <x:option name="toc-depth" select="1"/>
                <x:option name="pef-output-dir" select="resolve-uri('toc/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/2/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the first page containing 'Innhold'">
                <x:document type="file" base-uri="temp-dir" href="toc/2/pef-output-dir/book.pef" select="(//pef:page[contains(string-join(.//text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])[1]"/>
            </x:context>
            <x:expect label="there should be a TOC" type="count" min="1" max="1"/>
            <x:expect label="the TOC depth should be 1" type="xpath" test="count(distinct-values(.//text()[contains(.,'⠄⠄')]/string-length(replace(.,'[^⠀].*$',''))))" equals="1"/>
        </x:scenario>
        
        <x:scenario label="toc-depth=2">
            <x:call>
                <x:option name="toc-depth" select="2"/>
                <x:option name="pef-output-dir" select="resolve-uri('toc/3/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/3/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/3/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the first page containing 'Innhold'">
                <x:document type="file" base-uri="temp-dir" href="toc/3/pef-output-dir/book.pef" select="(//pef:page[contains(string-join(.//text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])[1]"/>
            </x:context>
            <x:expect label="there should be a TOC" type="count" min="1" max="1"/>
            <x:expect label="the TOC depth should be 2" type="xpath" test="count(distinct-values(.//text()[contains(.,'⠄⠄')]/string-length(replace(.,'[^⠀].*$',''))))" equals="2"/>
        </x:scenario>
        
        <x:scenario label="toc-depth=3">
            <x:call>
                <x:option name="toc-depth" select="3"/>
                <x:option name="pef-output-dir" select="resolve-uri('toc/4/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/4/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/4/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the first page containing 'Innhold'">
                <x:document type="file" base-uri="temp-dir" href="toc/4/pef-output-dir/book.pef" select="(//pef:page[contains(string-join(.//text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])[1]"/>
            </x:context>
            <x:expect label="there should be a TOC" type="count" min="1" max="1"/>
            <x:expect label="the TOC depth should be 3" type="xpath" test="count(distinct-values(.//text()[contains(.,'⠄⠄')]/string-length(replace(.,'[^⠀].*$',''))))" equals="3"/>
        </x:scenario>
        
        <x:scenario label="toc-depth=4">
            <x:call>
                <x:option name="toc-depth" select="4"/>
                <x:option name="pef-output-dir" select="resolve-uri('toc/5/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/5/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/5/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the first page containing 'Innhold'">
                <x:document type="file" base-uri="temp-dir" href="toc/5/pef-output-dir/book.pef" select="(//pef:page[contains(string-join(.//text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])[1]"/>
            </x:context>
            <x:expect label="there should be a TOC" type="count" min="1" max="1"/>
            <x:expect label="the TOC depth should be 3" type="xpath" test="count(distinct-values(.//text()[contains(.,'⠄⠄')]/string-length(replace(.,'[^⠀].*$',''))))" equals="3"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="No headings, no TOC">
        <x:call step="nlb:html-to-pef">
            <x:input port="source">
                <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                        <head>
                            
                            <meta name="dc:creator" content="author"/>
                            <title>title</title>
                        </head>
                        <body>
                            
                            <section epub:type="bodymatter">
                                <p>h1-1 short</p>
                                
                                <section>
                                    <p>h2-1</p>
                                    
                                    <section>
                                        <p>h3-1</p>
                                    </section>
                                    
                                    <section>
                                        <p>h3-2</p>
                                    </section>
                                </section>
                                
                                <section>
                                    <p>h2-2</p>
                                </section>
                            </section>
                        </body>
                    </html>
                </x:document>
            </x:input>
            <x:option name="toc-depth" select="1"/>
            <x:option name="hyphenation" select="'false'"/>
            <x:option name="pef-output-dir" select="resolve-uri('toc/6/pef-output-dir',$temp-dir)"/>
            <x:option name="preview-output-dir" select="resolve-uri('toc/6/preview-output-dir',$temp-dir)"/>
            <x:option name="temp-dir" select="resolve-uri('toc/6/temp-dir',$temp-dir)"/>
        </x:call>
        
        <x:context label="the first page containing 'Innhold'">
            <x:document type="file" base-uri="temp-dir" href="toc/6/pef-output-dir/book.pef" select="(//pef:page[contains(string-join(.//text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])[1]"/>
        </x:context>
        <x:expect label="there should not be a TOC" type="count" max="0"/>
    </x:scenario>
    
    <x:scenario label="wrapping toc lines (regression test for #169)">
        <x:documentation>
            Tests that when long headings are wrapped, the text is not placed in the page number
            column.
            
            Also shows that there can be lines with only leader dots and a page number, which is
            undesired.
            
            Also demonstrates a new bug: if the heading fits exactly on a single line with a right
            margin of 4, which is enough to contain the page number and one leader dot but not the
            space between the heading and the leader, it will be rendered like that. Note that if
            the space between the heading and the leader is made into a zero width space followed by
            a no-break space, the space and leader are moved to the next line.
        </x:documentation>
        <x:call step="nlb:html-to-pef">
            <x:option name="toc-depth" select="1"/>
            <x:option name="hyphenation" select="'false'"/>
            <x:option name="show-braille-page-numbers" select="'false'"/>
            <x:option name="insert-boilerplate" select="'false'"/>
        </x:call>
        <x:scenario label="no headings in page number column">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <body>
                                
                                <section epub:type="bodymatter">
                                    <h1>bla bla bla bla bla bla bla bla bla bla bla bla bla bla</h1>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('toc/7.1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/7.1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/7.1/temp-dir',$temp-dir)"/>
            </x:call>
            <x:context label="result">
                <x:document type="file" base-uri="temp-dir" href="toc/7.1/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="result" type="custom" href="http://www.daisy.org/pipeline/modules/braille/pef-utils/library.xpl" step="x:pef-compare">
                <x:document type="inline">
                    <pef xmlns="http://www.daisy.org/ns/2008/pef" version="2008-1">
                        <head>
                            <meta xmlns:dc="http://purl.org/dc/elements/1.1/">
                                <dc:format>application/x-pef+xml</dc:format>
                                <dc:identifier>identifier?</dc:identifier>
                                <dc:date>2018-04-30</dc:date>
                                <dc:language>no</dc:language>
                            </meta>
                        </head>
                        <body>
                            <volume cols="32" rows="28" rowgap="0" duplex="true">
                                <section>
                                    <page>
                                        <row/>
                                        <row/>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠊⠝⠝⠓⠕⠇⠙</row>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row/>
                                        <row>⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁</row>
                                        <row>⠀⠀⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁</row>
                                        <row>⠀⠀⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠉</row>
                                    </page>
                                </section>
                                <section>
                                    <page>
                                        <row/>
                                        <row/>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row>⠀⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁</row>
                                        <row>⠀⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁</row>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                    </page>
                                </section>
                            </volume>
                        </body>
                    </pef>
                </x:document>
            </x:expect>
        </x:scenario>
        <x:scenario label="no lines with only leader dots and page number" xfail="true">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <body>
                                
                                <section epub:type="bodymatter">
                                    <h1>bla bla bla bla bla bla bl</h1>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('toc/7.2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/7.2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/7.2/temp-dir',$temp-dir)"/>
            </x:call>
            <x:context label="result">
                <x:document type="file" base-uri="temp-dir" href="toc/7.2/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="result" type="custom" href="http://www.daisy.org/pipeline/modules/braille/pef-utils/library.xpl" step="x:pef-compare">
                <x:document type="inline">
                    <pef xmlns="http://www.daisy.org/ns/2008/pef" version="2008-1">
                        <head>
                            <meta xmlns:dc="http://purl.org/dc/elements/1.1/">
                                <dc:format>application/x-pef+xml</dc:format>
                                <dc:identifier>identifier?</dc:identifier>
                                <dc:date>2018-05-22</dc:date>
                                <dc:language>no</dc:language>
                            </meta>
                        </head>
                        <body>
                            <volume cols="32" rows="28" rowgap="0" duplex="true">
                                <section>
                                    <page>
                                        <row/>
                                        <row/>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠊⠝⠝⠓⠕⠇⠙</row>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row/>
                                        <row>⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁</row>
                                        <row>⠀⠀⠀⠀⠃⠇⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠁⠁</row>
                                    </page>
                                </section>
                                <section>
                                    <page>
                                        <row/>
                                        <row/>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row>⠀⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇</row>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                    </page>
                                </section>
                            </volume>
                        </body>
                    </pef>
                </x:document>
            </x:expect>
        </x:scenario>
        <x:scenario label="always a space between heading and leader" xfail="true">
            <x:call>
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                <style type="text/css" media="embossed">
                                    #generated-volume-toc li,
                                    #generated-document-toc li {
                                    margin-right: 4;
                                    }
                                </style>
                            </head>
                            <body>
                                
                                <section epub:type="bodymatter">
                                    <h1>bla bla bla bla bla bla b</h1>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('toc/7.3/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('toc/7.3/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('toc/7.3/temp-dir',$temp-dir)"/>
            </x:call>
            <x:context label="result">
                <x:document type="file" base-uri="temp-dir" href="toc/7.3/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="result" type="custom" href="http://www.daisy.org/pipeline/modules/braille/pef-utils/library.xpl" step="x:pef-compare">
                <x:document type="inline">
                    <pef xmlns="http://www.daisy.org/ns/2008/pef" version="2008-1">
                        <head>
                            <meta xmlns:dc="http://purl.org/dc/elements/1.1/">
                                <dc:format>application/x-pef+xml</dc:format>
                                <dc:identifier>identifier?</dc:identifier>
                                <dc:date>2018-05-22</dc:date>
                                <dc:language>no</dc:language>
                            </meta>
                        </head>
                        <body>
                            <volume cols="32" rows="28" rowgap="0" duplex="true">
                                <section>
                                    <page>
                                        <row/>
                                        <row/>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠊⠝⠝⠓⠕⠇⠙</row>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row/>
                                        <row>⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠀⠀⠼⠉</row>
                                    </page>
                                </section>
                                <section>
                                    <page>
                                        <row/>
                                        <row/>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                        <row>⠀⠀⠀⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃⠇⠁⠀⠃</row>
                                        <row>⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                                    </page>
                                </section>
                            </volume>
                        </body>
                    </pef>
                </x:document>
            </x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="pef-sections">
        <x:call step="nlb:html-to-pef">
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="duplex=true">
            <x:call step="nlb:html-to-pef">
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                            </head>
                            <body>
                                
                                
                                <section epub:type="frontmatter">
                                    <h1>frontmatter</h1>
                                </section>
                                
                                <section epub:type="bodymatter">
                                    <h1>bodymatter</h1>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="duplex" select="'true'"/>
                <x:option name="pef-output-dir" select="resolve-uri('pef-sections/1/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('pef-sections/1/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('pef-sections/1/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the PEF">
                <x:document type="file" base-uri="temp-dir" href="pef-sections/1/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="the titlepage should be in the first section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠠⠠⠝⠇⠃⠀⠤⠀⠼')]/preceding::pef:section) + 1" equals="1"/>
            <x:expect label="the about page should be in the first section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠠⠕⠍⠀⠃⠕⠅⠁')]/preceding::pef:section) + 1" equals="1"/>
            <x:expect label="the toc should be in the first section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')]/preceding::pef:section) + 1" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            <x:expect label="the non-generated content should start in the second section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠋⠗⠕⠝⠞⠍⠁⠞⠞⠑⠗')]/preceding::pef:section) + 1" equals="2" pending="https://github.com/nlbdev/pipeline/issues/126"/>
        </x:scenario>
        
        <x:scenario label="duplex=false">
            <x:call step="nlb:html-to-pef">
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                            </head>
                            <body>
                                
                                
                                <section epub:type="frontmatter">
                                    <h1>frontmatter</h1>
                                </section>
                                
                                <section epub:type="bodymatter">
                                    <h1>bodymatter</h1>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="duplex" select="'false'"/>
                <x:option name="pef-output-dir" select="resolve-uri('pef-sections/2/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('pef-sections/2/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('pef-sections/2/temp-dir',$temp-dir)"/>
            </x:call>
            
            <x:context label="the PEF">
                <x:document type="file" base-uri="temp-dir" href="pef-sections/2/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="the titlepage should be in the first section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠠⠠⠝⠇⠃⠀⠤⠀⠼')]/preceding::pef:section) + 1" equals="1"/>
            <x:expect label="the about page should be in the first section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠠⠕⠍⠀⠃⠕⠅⠁')]/preceding::pef:section) + 1" equals="1"/>
            <x:expect label="the toc should be in the first section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')]/preceding::pef:section) + 1" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            <x:expect label="the non-generated content should start in the second section" type="xpath" test="count(//pef:section[contains(string-join(.//pef:row/text(),''),'⠋⠗⠕⠝⠞⠍⠁⠞⠞⠑⠗')]/preceding::pef:section) + 1" equals="2" pending="https://github.com/nlbdev/pipeline/issues/126"/>
        </x:scenario>
        
        <x:scenario label="multiple volumes">
            <x:call step="nlb:html-to-pef">
                <x:input port="source">
                    <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                        <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                            <head>
                                
                                <meta name="dc:creator" content="author"/>
                                <title>title</title>
                            </head>
                            <body>
                                
                                <section epub:type="bodymatter part" class="part">
                                    <h1>part 1</h1>
                                    <p>content</p>
                                    
                                    <section>
                                        <h2>chapter 1</h2>
                                        <p>content</p>
                                    </section>
                                    
                                    <section>
                                        <h2>chapter 2</h2>
                                        <p>content</p>
                                    </section>
                                </section>
                                <section epub:type="bodymatter part" class="part">
                                    <h1>part 2</h1>
                                    <p>content</p>
                                    
                                    <section>
                                        <h2>chapter 3</h2>
                                        <p>content</p>
                                    </section>
                                    
                                    <section>
                                        <h2>chapter 4</h2>
                                        <p>content</p>
                                    </section>
                                </section>
                                <section epub:type="bodymatter part" class="part">
                                    <h1>part 3</h1>
                                    <p>content</p>
                                    
                                    <section>
                                        <h2>chapter 5</h2>
                                        <p>content</p>
                                    </section>
                                    
                                    <section>
                                        <h2>chapter 6</h2>
                                        <p>content</p>
                                    </section>
                                </section>
                            </body>
                        </html>
                    </x:document>
                </x:input>
                <x:option name="pef-output-dir" select="resolve-uri('pef-sections/3/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('pef-sections/3/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('pef-sections/3/temp-dir',$temp-dir)"/>
                <x:option name="show-braille-page-numbers" select="'false'"/>
                <x:option name="show-print-page-numbers" select="'false'"/>
            </x:call>
            
            <x:context label="the PEF">
                <x:document type="file" base-uri="temp-dir" href="pef-sections/3/pef-output-dir/book.pef"/>
            </x:context>
            
            <x:expect label="there should be 3 volumes" type="xpath" test="count(//pef:volume)" equals="3"/>
            
            <x:expect label="the first section of the first volume should contain a titlepage" type="xpath" test="count(//pef:volume[1]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠠⠝⠇⠃⠀⠤⠀⠼')])" equals="1"/>
            <x:expect label="the first section of the first volume should contain an about page" type="xpath" test="count(//pef:volume[1]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠕⠍⠀⠃⠕⠅⠁')])" equals="1"/>
            <x:expect label="the first section of the first volume should contain a toc" type="xpath" test="count(//pef:volume[1]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            <x:expect label="the first section of the first volume should not contain any non-generated content" type="xpath" test="count(//pef:volume[1]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠉⠕⠝⠞⠑⠝⠞')])" equals="0"/>
            <x:expect label="the second section of the first volume should contain non-generated content" type="xpath" test="count(//pef:volume[1]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠉⠕⠝⠞⠑⠝⠞')])" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            
            <x:expect label="the first section of the second volume should contain a titlepage" type="xpath" test="count(//pef:volume[2]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠠⠝⠇⠃⠀⠤⠀⠼')])" equals="1"/>
            <x:expect label="the first section of the second volume should not contain an about page" type="xpath" test="count(//pef:volume[2]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠕⠍⠀⠃⠕⠅⠁')])" equals="0"/>
            <x:expect label="the first section of the second volume should contain a toc" type="xpath" test="count(//pef:volume[2]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            <x:expect label="the first section of the second volume should not contain any non-generated content" type="xpath" test="count(//pef:volume[2]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠉⠕⠝⠞⠑⠝⠞')])" equals="0"/>
            <x:expect label="the second section of the second volume should contain non-generated content" type="xpath" test="count(//pef:volume[2]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠉⠕⠝⠞⠑⠝⠞')])" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            
            <x:expect label="the first section of the third volume should contain a titlepage" type="xpath" test="count(//pef:volume[3]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠠⠝⠇⠃⠀⠤⠀⠼')])" equals="1"/>
            <x:expect label="the first section of the third volume should not contain an about page" type="xpath" test="count(//pef:volume[3]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠕⠍⠀⠃⠕⠅⠁')])" equals="0"/>
            <x:expect label="the first section of the third volume should contain a toc" type="xpath" test="count(//pef:volume[3]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠠⠊⠝⠝⠓⠕⠇⠙')])" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            <x:expect label="the first section of the third volume should not contain any non-generated content" type="xpath" test="count(//pef:volume[3]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠉⠕⠝⠞⠑⠝⠞')])" equals="0"/>
            <x:expect label="the second section of the third volume should contain non-generated content" type="xpath" test="count(//pef:volume[3]/pef:section[position() = 1 and contains(string-join(.//pef:row/text(),''),'⠉⠕⠝⠞⠑⠝⠞')])" equals="1" pending="https://github.com/nlbdev/pipeline/issues/126"/>
            
            <x:context label="the toc in the first volume">
                <x:document type="file" base-uri="temp-dir" href="pef-sections/3/pef-output-dir/book.pef" select="//pef:volume[1]//pef:page[contains(string-join(.//pef:row/text(),''),'⠄⠄⠄⠀⠼')]"/>
            </x:context>
            <x:expect label="the first toc should be a document toc with a headline" type="compare">
                <x:document type="inline" select="/*/*">
                    <section xmlns="http://www.daisy.org/ns/2008/pef">
                        <page>
                            <row/>
                            <row/>
                            <row>⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                            <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠊⠝⠝⠓⠕⠇⠙</row>
                            <row>⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                            <row/>
                            <row>⠀⠏⠁⠗⠞⠀⠼⠁⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠑</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠁⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠛</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠃⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠊</row>
                            <row>⠀⠏⠁⠗⠞⠀⠼⠃⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠁⠑</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠉⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠁⠛</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠙⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠁⠊</row>
                            <row>⠀⠏⠁⠗⠞⠀⠼⠉⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠃⠑</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠑⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠃⠛</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠋⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠃⠊</row>
                            <row/>
                        </page>
                    </section>
                </x:document>
            </x:expect>
            
            <x:context label="the toc in the second volume">
                <x:document type="file" base-uri="temp-dir" href="pef-sections/3/pef-output-dir/book.pef" select="//pef:volume[2]//pef:page[contains(string-join(.//pef:row/text(),''),'⠄⠄⠄⠀⠼')]"/>
            </x:context>
            <x:expect label="the second toc should be a volume toc with a headline" type="compare">
                <x:document type="inline" select="/*/*">
                    <section xmlns="http://www.daisy.org/ns/2008/pef">
                        <page>
                            <row/>
                            <row/>
                            <row>⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                            <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠊⠝⠝⠓⠕⠇⠙</row>
                            <row>⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                            <row/>
                            <row>⠀⠏⠁⠗⠞⠀⠼⠃⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠁⠑</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠉⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠁⠛</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠙⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠁⠊</row>
                        </page>
                    </section>
                </x:document>
            </x:expect>
            
            <x:context label="the toc in the third volume">
                <x:document type="file" base-uri="temp-dir" href="pef-sections/3/pef-output-dir/book.pef" select="//pef:volume[3]//pef:page[contains(string-join(.//pef:row/text(),''),'⠄⠄⠄⠀⠼')]"/>
            </x:context>
            <x:expect label="the third toc should be a volume toc with a headline" type="compare">
                <x:document type="inline" select="/*/*">
                    <section xmlns="http://www.daisy.org/ns/2008/pef">
                        <page>
                            <row/>
                            <row/>
                            <row>⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                            <row>⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠊⠝⠝⠓⠕⠇⠙</row>
                            <row>⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉</row>
                            <row/>
                            <row>⠀⠏⠁⠗⠞⠀⠼⠉⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠃⠑</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠑⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠃⠛</row>
                            <row>⠀⠀⠀⠀⠀⠉⠓⠁⠏⠞⠑⠗⠀⠼⠋⠀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠀⠼⠃⠊</row>
                        </page>
                    </section>
                </x:document>
            </x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="DTBook frontmatter should not be duplicated (issue 93)">
        <x:call step="nlb:html-to-pef">
            <x:input port="source">
                <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                        <head>
                            
                        </head>
                        <body>
                            
                            
                            <section epub:type="frontmatter titlepage">
                                <h1 epub:type="fulltitle" class="title">tests</h1>
                            </section>
                            
                            <section epub:type="frontmatter">
                                <p>Forordet skal ikke være annerledes en det som kommer etterpå; margene skal være de samme - og det skal være økt linjeavstand</p>
                            </section>
                            
                            <section epub:type="bodymatter">
                                <p>Boka har ingen overskrifter, men det betyr ikke at det ikke skal være toppmarg ved begynnelsen. Den har økt linjeavstand.</p>
                                <figure class="image-group">
                                    <figure class="image">
                                        <img src="xxx.jpg" alt="Bildet viser konturene av ingenting mot en lysabsorberende flate av tomhet. Kontrastene er ikke akkurat til å ta og føle på."/> 
                                    </figure>
                                </figure>
                            </section>
                        </body>
                    </html>
                </x:document>
            </x:input>
            <x:option name="hyphenation" select="'false'"/>
            <x:option name="pef-output-dir" select="resolve-uri('4/pef-output-dir',$temp-dir)"/>
            <x:option name="preview-output-dir" select="resolve-uri('4/preview-output-dir',$temp-dir)"/>
            <x:option name="temp-dir" select="resolve-uri('4/temp-dir',$temp-dir)"/>
        </x:call>
        <x:context label="result">
            <x:document type="file" base-uri="temp-dir" href="4/pef-output-dir/book.pef"/>
        </x:context>
        <x:expect label="The text 'Forordet skal' should only occur once" type="xpath" test="count(//pef:row[contains(text(),'⠠⠋⠕⠗⠕⠗⠙⠑⠞⠀⠎⠅⠁⠇')])" equals="1"/>
    </x:scenario>
    
    <x:scenario label="double linespacing should work inside the DTBook frontmatter (see comment on issue 93)">
        <x:call step="nlb:html-to-pef">
            <x:input port="source">
                <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                        <head>
                            
                        </head>
                        <body>
                            
                            
                            <section epub:type="frontmatter titlepage">
                                <h1 epub:type="fulltitle" class="title">tests</h1>
                            </section>
                            
                            <section epub:type="frontmatter">
                                <p>Forordet skal ikke være annerledes en det som kommer etterpå; margene skal være de samme - og det skal være økt linjeavstand</p>
                            </section>
                            
                            <section epub:type="bodymatter">
                                <p>Boka har ingen overskrifter, men det betyr ikke at det ikke skal være toppmarg ved begynnelsen. Den har økt linjeavstand.</p>
                                <figure class="image-group">
                                    <figure class="image">
                                        <img src="xxx.jpg" alt="Bildet viser konturene av ingenting mot en lysabsorberende flate av tomhet. Kontrastene er ikke akkurat til å ta og føle på."/> 
                                    </figure>
                                </figure>
                            </section>
                        </body>
                    </html>
                </x:document>
            </x:input>
            <x:option name="hyphenation" select="'false'"/>
        </x:call>
        
        <x:scenario label="single line spacing">
            <x:call>
                <x:option name="line-spacing" select="'single'"/>
                <x:option name="pef-output-dir" select="resolve-uri('5/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('5/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('5/temp-dir',$temp-dir)"/>
            </x:call>
            <x:context label="result">
                <x:document type="file" base-uri="temp-dir" href="5/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="The row after the row containing 'Forordet skal', should not be empty and there should be no rowgap" type="xpath" test="(//pef:row[contains(text(),'⠠⠋⠕⠗⠕⠗⠙⠑⠞⠀⠎⠅⠁⠇')])[1]/((not(@rowgap) or @rowgap = '0') and following-sibling::pef:row[1]/replace(text(),'[\s⠀]','') != '')"/>
        </x:scenario>
        
        <x:scenario label="double line spacing">
            <x:call>
                <x:option name="line-spacing" select="'double'"/>
                <x:option name="pef-output-dir" select="resolve-uri('6/pef-output-dir',$temp-dir)"/>
                <x:option name="preview-output-dir" select="resolve-uri('6/preview-output-dir',$temp-dir)"/>
                <x:option name="temp-dir" select="resolve-uri('6/temp-dir',$temp-dir)"/>
            </x:call>
            <x:context label="result">
                <x:document type="file" base-uri="temp-dir" href="6/pef-output-dir/book.pef"/>
            </x:context>
            <x:expect label="Either rowgap should be 4, or the row after the row containing 'Forordet skal', should be empty" type="xpath" test="(//pef:row[contains(text(),'⠠⠋⠕⠗⠕⠗⠙⠑⠞⠀⠎⠅⠁⠇')])[1]/(@rowgap = '4' or following-sibling::pef:row[1]/replace(text(),'[\s⠀]','') = '')"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="margins in frontmatter should be the same as in bodymatter (see comment on issue 93)">
        <x:call step="nlb:html-to-pef">
            <x:input port="source">
                <x:document type="inline" xml:base="file:/tmp/book.xhtml">
                    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="no" lang="no">
                        <head>
                            
                        </head>
                        <body>
                            
                            
                            <section epub:type="frontmatter titlepage">
                                <h1 epub:type="fulltitle" class="title">test</h1>
                            </section>
                            
                            <section epub:type="frontmatter">
                                <p>frontmatter xxxxxx</p>
                                <p>frontmatter xxxxxxx</p>
                                <p>frontmatter xxxxxxxx</p>
                                <p>frontmatter xxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxxxxxxxx</p>
                                <p>frontmatter xxxxxxxxxxxxxxxxxxx</p>
                            </section>
                            
                            <section epub:type="bodymatter">
                                <p>bodymatter xxxxxxxx</p>
                                <p>bodymatter xxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxxxxxxxx</p>
                                <p>bodymatter xxxxxxxxxxxxxxxxxxxxx</p>
                            </section>
                        </body>
                    </html>
                </x:document>
            </x:input>
            <x:option name="hyphenation" select="'false'"/>
            <x:option name="page-width" select="32"/>
            <x:option name="pef-output-dir" select="resolve-uri('7/pef-output-dir',$temp-dir)"/>
            <x:option name="preview-output-dir" select="resolve-uri('7/preview-output-dir',$temp-dir)"/>
            <x:option name="temp-dir" select="resolve-uri('7/temp-dir',$temp-dir)"/>
        </x:call>
        
        <x:context label="result">
            <x:document type="file" base-uri="temp-dir" href="7/pef-output-dir/book.pef"/>
        </x:context>
        <x:expect label="The left margins should be the same in frontmatter and bodymatter" type="xpath" test="min(//pef:row[contains(text(),'⠋⠗⠕⠝⠞⠍⠁⠞⠞⠑⠗')]/string-length(replace(text(),'^(⠀*).+?$','$1','s')))" equals="min(//pef:row[contains(text(),'⠃⠕⠙⠽⠍⠁⠞⠞⠑⠗')]/string-length(replace(text(),'^(⠀*).+?$','$1','s')))"/>
        <x:expect label="The right margins should be the same in frontmatter and bodymatter" type="xpath" test="min(//pef:row[contains(text(),'⠋⠗⠕⠝⠞⠍⠁⠞⠞⠑⠗')]/(string-length(replace(text(),'^.+?(⠀*)$','$1','s')) + (32 - string-length(text()))))" equals="min(//pef:row[contains(text(),'⠃⠕⠙⠽⠍⠁⠞⠞⠑⠗')]/(string-length(replace(text(),'^.+?(⠀*)$','$1','s')) + (32 - string-length(text()))))"/>
    </x:scenario>
    
</x:description>
