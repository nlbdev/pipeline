@namespace epub 'http://www.idpf.org/2007/ops';
@namespace xml 'http://www.w3.org/XML/1998/namespace';

/* Declare parameters. Values are passed in from nlb:dtbook-to-pef. */
$show-print-page-numbers: false !default;
$show-braille-page-numbers: false !default;
$line-spacing: false !default;
$include-notes: true !default;
$include-images: true !default;
$include-captions: true !default;
$notes-placement: end-of-volume !default;
$default-table-class: table-matrix !default;
$page-width: 40 !default;

/* -------------------------------------------------------------------------- */
/*                page                                                        */
/* -------------------------------------------------------------------------- */

/* Count pages continuously but hide them in generated pages */
@page {
        // set counter-increment explicitly because otherwise it will
        // be implicitly set to "pre-page" or "post-page" when in a
        // volume area context.
        counter-increment: page;
        margin-right: 1;
        @if $show-print-page-numbers {
            margin-left: 2;
        } @else {
            margin-left: 1;
        }
}

book, body {
        page: body;
}

.pef-titlepage, .pef-about,
#generated-volume-toc, #generated-document-toc {
        page: auto;
}

/* -------------------------------------------------------------------------- */
/*                braille and print page numbers                              */
/* -------------------------------------------------------------------------- */

/* Don't show pagenumber inline. Store reference in case we want to show marker in margin. */
pagenum, *[epub|type~='pagebreak'] {
        display: none;
        -obfl-marker: pagenum;
}

/* Show page numbers in bodymatter and backmatter. */
@if $show-print-page-numbers {
        bodymatter pagenum,
        rearmatter pagenum {
                string-set: print-page "⠿" content();
        }
        
        /*body[epub|type~='bodymatter'], section[epub|type~='bodymatter'], body[epub|type~='backmatter'], section[epub|type~='backmatter'] {*/
        body:not([epub|type~='frontmatter']) *[epub|type~='pagebreak'] {
                /* *[epub|type~='pagebreak'] {*/
                        &[title] {
                                string-set: print-page "⠿" attr(title);
                        }
                        &:not([title]) {
                                string-set: print-page "⠿" content();
                        }
                /*}*/
        }
        
        /* clear print page number after frontmatter (so that 'last' page does not point from bodymatter to frontmatter) */
        bodymatter {
            string-set: print-page "";
        }
        body[epub|type~='frontmatter']:not(+ body[epub|type~='frontmatter'])::after,
        section[epub|type~='frontmatter']:not(+ section[epub|type~='frontmatter'])::after {
            string-set: print-page "";
        }
}

@page body {
        @if $show-print-page-numbers {
                @bottom-right {
                        content: string(print-page, last);
                }
                @left {
                    content: -obfl-marker-indicator(pagenum, '⠿');
                }
        }

        @if $show-braille-page-numbers {
                @bottom-center {
                        content: counter(page);
                }
        }
}

/* -------------------------------------------------------------------------- */
/*               line spacing                                                 */
/* -------------------------------------------------------------------------- */

@if $line-spacing == double {
        :root {
                line-height: 1;

                /* to cancel out generic rule */
        }

        frontmatter level1:not(.pef-titlepage,
                               .pef-about,
                               :has(> #generated-volume-toc,
                                    > #generated-document-toc)),
        bodymatter,
        body:not([epub|type~='backmatter'],
                 .pef-titlepage,
                 .pef-about,
                 :has(> #generated-volume-toc,
                      > #generated-document-toc)),
        section:not([epub|type~='backmatter'],
                    .pef-titlepage,
                    .pef-about,
                    :has(> #generated-volume-toc,
                         > #generated-document-toc)) {
                line-height: 2;
        }

        @page body:left {
                margin-top: 1;
        }
}

/* -------------------------------------------------------------------------- */
/* Book structure, including headlines, volume breaking, toc, titlepage, etc. */
/* -------------------------------------------------------------------------- */

/* Parts */
level1.part, *[epub|type~='part'] {
    page-break-before: right;
    
    & ~ level1.part,
    & ~ *[epub|type~='part'] {
        /* Note: this selector assumes that parts in EPUBs are sibling elements */
        
        /* Always start a new volume before a new part */
        volume-break-before: always;
        page-break-before: auto; // FIXME: page-break-before: right can not be used in combination with volume-break-before: always
                                 // see https://github.com/daisy/pipeline-mod-braille/issues/173
    }
}

/* Always start top-level chapters on right-hand page: DTBook */
level1:not(.part,
           .pef-titlepage,
           .pef-about,
           :has(> #generated-volume-toc,
                > #generated-document-toc)),
level1.part > level2 {
        page-break-before: right;
}

/* Always start top-level chapters on right-hand page: EPUB/HTML */
html:has(body ~ body) > body,
html:not(:has(body ~ body)) > body > section {
        &:not(.pef-titlepage,
              .pef-about,
              :has(> #generated-volume-toc,
                   > #generated-document-toc)) {
                &:not([epub|type~='part']), &[epub|type~='part'] > section {
                        page-break-before: right;
                }
        }
}

/* Volume breaking rules based on level depth: DTBook */
frontmatter > level1:not(.part,
                         .pef-titlepage,
                         .pef-about,
                         :has(> #generated-volume-toc,
                              > #generated-document-toc)) ~ level1,
frontmatter:has(level1:not(.part,
                           .pef-titlepage,
                           .pef-about,
                           :has(> #generated-volume-toc,
                                > #generated-document-toc))) ~ bodymatter > level1,
bodymatter > level1:not(.part) ~ level1:not(.part),
rearmatter > level1:not(.part) {
        /* level1 except first non-generated level1 */
        volume-break-inside: -obfl-keep(8);
}
level1.part ~ level1.part level2 { volume-break-inside: -obfl-keep(8); }
level2 ~ level2                  { volume-break-inside: -obfl-keep(7); }
level3 ~ level3                  { volume-break-inside: -obfl-keep(6); }
level4 ~ level4                  { volume-break-inside: -obfl-keep(5); }
level5 ~ level5                  { volume-break-inside: -obfl-keep(4); }
level6 ~ level6                  { volume-break-inside: -obfl-keep(3); }

@for $i from 1 through 6 {
    h#{$i} {
        -obfl-keep-with-next-sheets: 1;
    }
    level#{$i} ~ level#{$i} > h#{$i} {
        -obfl-keep-with-next-sheets: 0;
    }
}

/* Volume breaking rules based on level depth: EPUB/HTML */
html:has(body ~ body) > body,
html:not(:has(body ~ body)) > body > section {
        &:not(.pef-titlepage,
              .pef-about,
              :has(> #generated-volume-toc,
                   > #generated-document-toc)) {
                & ~ body, & ~ section {
                        /* level1 except first non-generated level1 */
                        volume-break-inside: -obfl-keep(8);
                }
        }
}
body[epub|type~='part'] ~ body[epub|type~='part'] > section,
body > section[epub|type~='part'] ~ section[epub|type~='part'] > section { volume-break-inside: -obfl-keep(8); }
body > section ~ section                                                 { volume-break-inside: -obfl-keep(7); }
body > section > section ~ section                                       { volume-break-inside: -obfl-keep(6); }
body > section > section > section ~ section                             { volume-break-inside: -obfl-keep(5); }
body > section > section > section > section ~ section                   { volume-break-inside: -obfl-keep(4); }
body > section > section > section > section > section ~ section         { volume-break-inside: -obfl-keep(3); }

/* Avoid volume breaking inside certain DTBook elements (mainly block-level) */
h1, h2, h3, h4, h5, h6,
imggroup, prodnote, sidebar, note, annotation
list, dl, table, poem,
p, address, blockquote, byline, dateline, epigraph, author {
    volume-break-inside: -obfl-keep(1);
}

/* Avoid volume breaking inside certain HTML elements (mainly block-level) */
h1, h2, h3, h4, h5, h6,
nav, header, hgroup,
figure, footer, form,
ol, ul, dl, table,
canvas, audio, video,
p, address, aside, blockquote, pre {
    volume-break-inside: -obfl-keep(1);
}

/* Avoid page breaks after a headline (orphaned headline) */
h1, h2, h3, h4, h5, h6 {
    page-break-after: avoid;
}

/* -------------------------------------------------------------------------- */
/*                        Generated content CSS                               */
/* -------------------------------------------------------------------------- */

/* Insert generated content at start of volume */
@volume {
        @begin {
                content: flow(front) flow(volume-toc);
        }
}
@volume :first {
        @begin {
                content: flow(front) flow(front-first) flow(document-toc);
        }
}

/* this elements is generated by insert-boilerplate.xsl
 * it is inserted in the frontmatter (first body) before the first level1 (section) */
.pef-titlepage {
        flow: front;
        display: block;
        volume-break-after: avoid;
        text-transform: uncontracted;
        margin-top: 0;
        margin-left: 1;
        margin-right: 1;
        hyphens: none;
        
        & > p {
            margin-top: 0;
            margin-bottom: 0;
            text-indent: 0;
            text-align: center;
        }
}

.pef-volume {
        &::before {
                content: "Hefte " -obfl-evaluate("(round $volume)");
        }
        
        &::after {
                content: -obfl-evaluate("(round $volumes)");
        }
}

/* #generated-*-toc is a <list> in DTBook and <ol> in HTML
 * these elements are generated by px:dtbook-to-pef.convert */
#generated-volume-toc, #generated-document-toc {
        // flow: volume-toc; // default for #generated-volume-toc
        // flow: document-toc; // default for #generated-document-toc
        volume-break-after: avoid;
        page-break-before: always;
        margin-left: 0; // no left margin on toc lists
        
        &::-obfl-on-toc-start {
            content: 'Innhold';
            display: block;
            border-bottom: ⠉;
            border-left: none;
            border-right: none;
            border-top: ⠉;
            margin-bottom: 1;
            margin-left: 0;
            margin-right: 0;
            margin-top: 2;
            text-align: center;
        }
        
        li {
                display: block;
                margin-left: 2;
                margin-right: 4;
                margin-top: 0;
                text-indent: -2;
                
                & a::after {
                        content: " " leader("⠄", $page-width - if($show-print-page-numbers, 2, 1) - 1, right) " " target-counter(attr(href), page);
                        margin-left: 2;
                        margin-top: 0;
                        text-indent: -2;
                }
        }
}

/* these elements are generated by insert-boilerplate.xsl
 * they are inserted after .pef-titlepage
 * there can be multiple .pef-about elements; the first one is a level1 (body) and starts with a h1
 */
.pef-about {
        
        // can not be put in the normal flow because of how the .notes-placement and .notes-placement-fallback
        // fields are currently implemented
        flow: front-first;
        volume-break-after: avoid;
}


/* -------------------------------------------------------------------------- */
/*                                  Pages in document                         */
/* -------------------------------------------------------------------------- */

.pef-pages {
        display: inline;
}

.pef-pages::after {
        display: inline;
        content: -obfl-evaluate("(round (/ $sheets-in-document 2))");
}

/* -------------------------------------------------------------------------- */
/*                                  general                                   */
/* -------------------------------------------------------------------------- */
head {
        display: none;
}

body[epub|type~='cover'], section[epub|type~='cover'], level1.jacketcopy {
    display: none;
}

level1,
bodymatter, rearmatter, body:not([epub|type~='frontmatter']) {
        display: block;
}

frontmatter, *[epub|type~='frontmatter'] {
        display: none;
        &:has(> *:not(doctitle,
                      h1[epub|type~='fulltitle'],
                      h1[epub|type~='z3998:covertitle'],
                      docauthor,
                      h1[epub|type~='z3998:author'],
                      .pef-titlepage,
                      .pef-about
                      )) {
                display: block;
        }
}

blockquote, sidebar, aside[epub|type~='sidebar'], epigraph, aside[epub|type~='epigraph'],
.Rammetekst, poem, section[epub|type~='z3998:poem'], div[epub|type~='z3998:poem'], linegroup, section.linegroup, div.linegroup, line, p.line {
        display: block;
}

doctitle, h1[epub|type~='fulltitle'], h1[epub|type~='z3998:covertitle'], docauthor, h1[epub|type~='z3998:author'] {
        display: none;
}

/* -------------------------------------------------------------------------- */
/*                Text formatting                                             */
/* -------------------------------------------------------------------------- */

sub {
    // FIXME: use "-louis-sub" when supported
    text-transform: -louis-emph-4;
}

sup {
    // FIXME: use "-louis-super" when supported
    text-transform: -louis-emph-5;
}

/* -------------------------------------------------------------------------- */
/*                Uncontracted content                                        */
/* -------------------------------------------------------------------------- */

.uncontracted-letters, h1 {
        text-transform: uncontracted;
}

[xml|lang]:not([xml|lang|="no"]), [lang]:not([lang|="no"]) {
        text-transform: uncontracted;
        
        /* "contracted" means "allow contracted" */
        [xml|lang|="no"], [lang|="no"] {
                text-transform: contracted;
        }
}

/* -------------------------------------------------------------------------- */
/*                Thematic breaks                                             */
/* -------------------------------------------------------------------------- */

/* Note: The DTBook classes precedingseparator and precedingemptyline */
/*       are replaced with hr elements during preprocessing.          */

hr::before {
        display: block;
        text-align: center;
        content: "⠄⠄⠄⠄⠄⠄⠄⠄";
        margin-bottom: 1;
        margin-top: 1;
}

hr.emptyline::before {
        content: "";
        margin-bottom: 0;
}

/* -------------------------------------------------------------------------- */
/*                Special classes                                             */
/* -------------------------------------------------------------------------- */

.Rammetekst {
        margin-top: 1;
        margin-bottom: 1;
        text-indent: 2;
        text-align: left;
        margin-left: 2;
}

.Rammetekst::before {
        content: "Rammetekst: ";
}

*[showin^="x"], *.hidden-braille {
        display: none;
}

/* -------------------------------------------------------------------------- */
/*                Headlines                                                     */
/* -------------------------------------------------------------------------- */

/* depth 6 */
h6 {
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        margin-bottom: 0;
        margin-left: 1;
        margin-right: 5;
        margin-top: 1;
        text-align: left;
        text-indent: 0;
}
 
/* depth 5 */
h5, level1.part h6, *[epub|type~='part'] h6 {
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        margin-bottom: 0;
        margin-left: 1;
        margin-right: 5;
        margin-top: 1;
        text-align: left;
        text-indent: 0;
}
 
/* depth 4 */
h4, level1.part h5, *[epub|type~='part'] h5 {
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        margin-bottom: 0;
        margin-left: 1;
        margin-right: 5;
        margin-top: 1;
        text-align: left;
        text-indent: 0;
}

/* depth 3 */
h3, level1.part h4, *[epub|type~='part'] h4 {
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        margin-bottom: 0;
        margin-left: 2;
        margin-right: 2;
        margin-top: 1;
        text-align: center;
        text-indent: 0;
}
 
/* depth 2 */
h2, level1.part h3, *[epub|type~='part'] h3 {
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        margin-bottom: 1;
        margin-left: 2;
        margin-right: 2;
        margin-top: 2;
        text-align: center;
        text-indent: 0;
}

/* depth 1 */
h1, level1.part h2, *[epub|type~='part'] h2 {
        border-bottom: ⠉;
        border-left: none;
        border-right: none;
        border-top: ⠉;
        margin-bottom: 1;
        margin-left: 0;
        margin-right: 0;
        margin-top: 2;
        text-align: center;
        text-indent: 0;
}

/* part */
level1.part h1, *[epub|type~='part'] h1 {
        border-bottom: ⠤;
        border-left: ⠇;
        border-right: ⠸;
        border-top: ⠉;
        margin-bottom: 1;
        margin-left: 1;
        margin-right: 5;
        margin-top: 2;
        text-align: center;
        text-indent: 0;
}

/* -------------------------------------------------------------------------- */
/*                Other elements                                              */
/* -------------------------------------------------------------------------- */

p {
        text-indent: 2;
        text-align: left;
        widows: 2;
        orphans: 2;
}

blockquote {
        margin-top: 1;
        margin-bottom: 1;
        margin-left: 2;
        text-indent: 2;
        text-align: left;
}

sidebar, aside[epub|type~='sidebar'] {
        margin-top: 1;
        margin-bottom: 1;
        margin-left: 2;
        text-indent: 2;
        text-align: left;
}

sidebar::before, aside[epub|type~='sidebar']::before {
        content: "Margtekst: ";
}

epigraph, aside[epub|type~='epigraph'] {
        margin-top: 1;
        margin-bottom: 1;
        margin-left: 2;
        text-indent: 2;
        text-align: left;
}

prodnote, aside[epub|type~='z3998:production'] {
       display: block;
       &::before {
               content: "⠷";
       }
       &::after {
               content: "⠾";
       }
}

/* -------------------------------------------------------------------------- */
/*                Images                                                      */
/* -------------------------------------------------------------------------- */

/* Show image captions */
@if $include-captions {
        imggroup, figure:has(img) {
                display: block;
                
                caption, figcaption {
                        display: block;
                        margin-top: 1;
                        margin-bottom: 1;
                        margin-left: 2;
                        text-indent: 2;
                        text-align: left;
                        
                        &::before {
                                content: "Bildetekst: ";
                        }
                }
        }
} @else {
        imggroup, figure:has(img) {
            caption, figcaption {
                display: none;
            }
        }
}

/* Show alt text for images with alt text */
@if $include-images {
        img[alt]:not([alt='']):not([alt='image'])::after {
                display: block;
                content: "Bilde. " attr(alt);
                margin-top: 1;
                margin-bottom: 1;
                margin-left: 2;
                text-indent: 2;
                text-align: left;
        }
        
        /* Don't render decorative images */
        img:not([alt])::after, img[alt='']::after, img[alt='image']::after {
                content: none;
        }
} @else {
        img {
                display: none;
                &::after {
                        content: none;
                }
        }
}

/* -------------------------------------------------------------------------- */
/*                Poems                                                       */
/* -------------------------------------------------------------------------- */

poem, section[epub|type~='z3998:poem'], div[epub|type~='z3998:poem'] {
        text-indent: 2;
        text-align: left;
}

linegroup, section.linegroup, div.linegroup {
        margin-bottom: 1;
        text-indent: -2;
}

line, p.line {
        margin-left: 2;
        text-indent: -2;
}

/* -------------------------------------------------------------------------- */
/*                Lists                                                       */
/* -------------------------------------------------------------------------- */

list, ul, ol {
        margin-top: 1;
        margin-left: 2;
        margin-bottom: 1;
}

li {
        text-indent: -2;
        text-align: left;
        display: list-item;
        
        list, ul, ol {
            margin-top: 0;
            margin-bottom: 0;
        }
}

list, ul, ol {
        counter-reset: list-item;
}

list[type=ul], ul {
        list-style-type: '⠤⠤';
}

list[type=ol], ol {
        list-style-type: decimal;
}

/* -------------------------------------------------------------------------- */
/*                Tables                                                      */
/* -------------------------------------------------------------------------- */

table {
    &%table-matrix {
        display: table;
    }
    
    &%table-linearized {
        display: block;
        tr {
            display: block;
            text-indent: -2;
            margin-left: 2;
        }
        td > p,
        th > p {
            display: inline;
        }
        td + td::before,
        th + th::before {
            content:" ⠆ ";
            text-transform: none;
            hyphens: initial;
        }
    }
    
    &%table-as-list {
        display: block;
        render-table-by: row;
        th::after {
            content: ': ';
        }
        &::list-item {
            display: block;
        }
        &::table-by(row) {
            display: block;
            margin-left: 2;
            &::list-item {
                display: block;
                margin-left: 2;
                text-indent: -2;
                &:first-child {
                    text-indent: -4;
                    // does not work:
                    // > p { ... }
                }
            }
        }
        td > p,
        th > p {
            // "text-indent: inherit" does not work so we just drop p's altogether
            display: inline;
        }
        td:blank::after {
            content: "(tom)";
        }
    }
    
    &.table-matrix {
        @extend %table-matrix;
    }
    
    &.table-linearized {
        @extend %table-linearized;
    }
    
    &.table-as-list {
        @extend %table-as-list;
    }
    
    @if ($default-table-class != 'table-as-list') {
        &:not([class]) {
            @extend %#{$default-table-class};
        }
    } @else {
        &:not([class]) {
            display: block;
            render-table-by: row;
            th::after {
                content: ': ';
            }
            &::list-item {
                display: block;
            }
            td {
                margin-left: 2;
                text-indent: -2;
            }
            td > p,
            th > p {
                display: inline;
            }
            td:empty::after {
                content: "(tom)";
            }
        }
        // FIXME: otherwise SASS moves the :not([class]) after the ::table-by(row)
        &:not([class])::table-by(row) {
            display: block;
            margin-left: 2;
            &::list-item {
                display: block;
                margin-left: 2;
                text-indent: -2;
                &:first-child {
                    text-indent: -4;
                }
            }
        }
    }
    
    caption {
        display: block;
        text-indent: 2;
        margin-top: 1;
        margin-bottom: 1;
        text-align: left;
    }

    caption::after,
    &:not(:has(caption))::before {
        display: block;
        text-indent: 2;
        margin-top: 1;
        margin-bottom: 1;
        content: 'Tabell starter';
    }
    
    &::after {
        display: block;
        text-indent: 2;
        margin-top: 1;
        margin-bottom: 1;
        content: 'Tabell slutter';
    }
}

/* -------------------------------------------------------------------------- */
/*                Note and endnote                                            */
/* -------------------------------------------------------------------------- */

noteref, a[epub|type~='noteref'],
note, aside[epub|type~='note'],
level1.footnotes,
rearmatter:not(:has(> *:not(level1.footnotes))) {
        display: none;
}

/* An extend-only selector (%endnotes-title) would be more appropriate
 * but does not seem to work in the 'end-of-book' case */
@mixin endnotes-title {
        display: block;
        margin-top: 2;
        margin-left: 0;
        margin-right: 0;
        margin-bottom: 1;
        text-align: center;
        border-top: ⠉;
        border-bottom: ⠉;
        content: 'Fotnoter';
        text-transform: auto;
}

/*
 * noteref numbering is implemented in pre-processing.xsl
 * FIXME: could be implemented in CSS
 */
@mixin noteref($refattr) {
        display: inline;
        &::before {
                content: '⠠';
        }
        &::alternate {
                display: block;
                content: target-content(attr($refattr));
                @if ($notes-placement == 'bottom-of-page') {
                        flow: footnotes;
                } @else {
                        flow: endnotes;
                }
        }
}

@if ($include-notes) {
        
        @page notes {
                @if $show-braille-page-numbers {
                        @bottom-center {
                                content: counter(page);
                        }
                }
        }

        @if ($notes-placement == 'bottom-of-page') {
                @page {
                        @footnotes {
                                content: flow(footnotes);
                                max-height: 15;
                                border-top: ⠤;
                                -obfl-fallback-collection: endnotes;
                        }
                }
                .notes-placement {
                        -obfl-use-when-collection-not-empty: footnotes;
                }
                .notes-placement-fallback {
                        -obfl-use-when-collection-not-empty: endnotes;
                }
                
        } @else if ($notes-placement == 'end-of-book') {
                book, html {
                        &:has(noteref, a[epub|type~='noteref'])::after {
                                &::before {
                                        @include endnotes-title;
                                        page-break-before: right;
                                }
                                content: flow(endnotes);
                                page: notes;
                        }
                }
        }
        @if ($notes-placement == 'bottom-of-page' or $notes-placement == 'end-of-volume') {
                book, html {
                        &:has(noteref, a[epub|type~='noteref'])::alternate {
                               @include endnotes-title;
                               flow: endnotes-title;
                        }
                }
                @volume {
                        @end {
                                content: flow(endnotes-title) flow(endnotes, volume);
                                page: notes;
                        }
                }
        }

        
        noteref {
                @include noteref(idref);
        }
        
        a[epub|type~='noteref'] {
                @include noteref(href);
        }

        note, aside[epub|type~='note'] { p {
                margin-left: 4;
                text-indent: -2;
                &::before {
                        content: '⠠';
                }
        }
        }
}
