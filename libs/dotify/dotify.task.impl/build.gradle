// For bnd
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.3.0'
	}
}

plugins {
	id 'java'
	id 'maven'
	id 'signing'
}

apply plugin: 'biz.aQute.bnd.builder'

group = 'org.daisy.dotify'

sourceCompatibility = 1.8
targetCompatibility = 1.8


sourceSets {
	main {	java { srcDir 'src' }	resources { srcDir 'src' } }
	test {	java { srcDir 'test' }	resources { srcDir 'test' } }
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
	options.encoding = 'UTF-8'
}

def repoRevision = System.getenv("REPO_REVISION")!=null?System.getenv("REPO_REVISION"):repositoryRevision

javadoc {
	options.encoding = 'UTF-8'
	options.links('http://docs.oracle.com/javase/8/docs/api/')
}

repositories {
	mavenCentral()
	//mavenLocal()
	maven { url "https://oss.sonatype.org/content/groups/staging" }
	//maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
	compileOnly 'org.osgi:org.osgi.service.component.annotations:1.3.0'
	compile 'org.daisy.streamline:streamline-api:1.3.0'
	compile 'org.daisy.dotify:dotify.common:4.0.0'
	compile group: 'org.daisy.libs', name: 'jing', version: '20120724.0.0'	
	compile (group: 'org.daisy.libs', name: 'saxon-he', version: '9.5.1.5') {
		exclude module: 'Saxon-HE'
	}
	testCompile group: "junit", name: "junit", version: "4.12"
	testCompile ('org.daisy.braille:braille-utils.pef-tools:5.0.0') {
		exclude module: 'Saxon-HE'
	}
	testCompile 'org.daisy.streamline:streamline-engine:1.2.0'
}

jar {
	manifest {
		attributes(
			'-sources': 'true',
			'Import-Package': 'org.daisy.streamline.api.identity; provide:=true,'+
								'org.daisy.streamline.api.tasks; provide:=true,'+
								'org.daisy.streamline.api.validity; provide:=true, *',
			'Export-Package':'org.daisy.dotify.tasks.tools',
			// See https://github.com/bndtools/bnd/issues/2677
			//'Private-Package': 'org.daisy.dotify.tasks.impl.*',
			'Service-Component': '*',
			'Automatic-Module-Name': "$moduleName",
			'Bundle-Name': "$bundleName",
			'Bundle-SymbolicName': "$bundleName",
			'Built-By': System.getProperty("user.name"),
			'Built-On': new Date().format('yyyy-MM-dd'),
			'Repository-Revision': "$repoRevision",
			'Repository-URL': "$repositoryURL",
			'Include-Resource': 'LICENSE, NOTICE'
		)
	}
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task xsltdoc() {
	doLast() {
		ant {
			xslt (
				basedir: "src",
				destdir: (new File(docsDir, "javadoc/resources")),
				style: "build-resources/build-xslt-doc.xsl",
				includes: "**/*.xsl",
				excludes:"lib, build-resources, build",
				filenameparameter: "filename"
			) {
				mapper (
					type: "package",
					from: "*.xsl",
					to: "*.html"
				)
				xmlcatalog {
					dtd (
						publicId: "-//W3C//DTD XHTML 1.0 Strict//EN",
						location: "build-resources/xhtml10/xhtml1-strict.dtd"
					)
				}
			}
		}
	}
}


javadoc {
	dependsOn xsltdoc
	doLast {
		copy {
			from "src"
			include "**/doc-files/*.*"
			into new File(docsDir, "javadoc")
		}
	}
}

artifacts {
    archives javadocJar, sourcesJar
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
	//Only upload if a git hash is supplied. On Travis only upload snapshots.
	enabled = repoRevision.size()==40 && System.getenv("TRAVIS_BUILD_ID")!=null
    repositories {
        mavenDeployer {
            if (isReleaseVersion) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            pom.project {
                name 'dotify.task.impl'
                packaging 'jar'
                description 'Dotify Task'
                url "$repositoryURL"
                scm {
                    connection "$repositorySCM"
                    developerConnection "$repositorySCM"
                    url "$repositoryURL"
                }
                licenses {
                    license {
                        name 'LGPL'
                        url 'http://www.gnu.org/licenses/lgpl.html'
                    }
                }
                developers {
                    developer {
                        id 'joel'
                        name 'Joel HÃ¥kansson'
                    }
                }
            }
        }
    }
}

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}