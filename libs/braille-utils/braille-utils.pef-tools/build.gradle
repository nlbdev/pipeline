// For bnd
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.3.0'
	}
}

plugins {
	id 'java'
	id 'maven'
	id 'signing'
}

apply plugin: 'biz.aQute.bnd.builder'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc {
	options.encoding = 'UTF-8'
	options.links('http://docs.oracle.com/javase/8/docs/api/');
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def repoRevision = System.getenv("REPO_REVISION")!=null?System.getenv("REPO_REVISION"):repositoryRevision

group = "org.daisy.braille"

sourceSets {
	main {	java { srcDir 'src' }	resources { srcDir 'src' } }
	test {	java { srcDir 'test' }	resources { srcDir 'test' } }
}

repositories {
    mavenCentral()
    //mavenLocal()
    maven { url "https://oss.sonatype.org/content/groups/staging" }
}

dependencies {
	compileOnly 'org.osgi:org.osgi.service.component.annotations:1.3.0'
	compile 'org.daisy.dotify:dotify.api:4.4.0'
	testCompileOnly 'org.osgi:org.osgi.service.component.annotations:1.3.0'	
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile 'org.daisy.dotify:dotify.common:4.3.0'
	runtime (group: 'org.daisy.libs', name: 'saxon-he', version: '9.5.1.5') {
		exclude module: 'Saxon-HE'
	}
	
}

jar {
	manifest {
		attributes(
			'-sources': 'true',
			'Export-Package': 'org.daisy.braille.utils.pef',
			'Service-Component': '*',
			'Automatic-Module-Name': "$moduleName",
			'Bundle-Name': "$bundleName",
			'Bundle-SymbolicName': "$bundleName",
			'Built-By': System.getProperty("user.name"),
			'Built-On': new Date().format('yyyy-MM-dd'),
			'Implementation-Title': "$releaseName",
			'Repository-Revision': "$repoRevision",
			'Repository-URL': "$repositoryURL",
			'Include-Resource': 'LICENSE, NOTICE'
		)
	}
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
	sign configurations.archives
}

uploadArchives {
	//Only upload if a git hash is supplied. On Travis only upload snapshots.
	enabled = repoRevision.size()==40 && System.getenv("TRAVIS_BUILD_ID")!=null
	repositories {
		mavenDeployer {
			if (isReleaseVersion) {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			}
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}
            pom.project {
				name 'braille-utils.pef-tools'
				packaging 'jar'
				description 'Braille Utils PEF Tools'
				url "$repositoryURL"
				scm {
					connection "$repositorySCM"
					developerConnection "$repositorySCM"
					url "$repositoryURL"
				}
                licenses {
					license {
						name 'LGPL'
						url 'http://www.gnu.org/licenses/lgpl.html'
					}
                }
				developers {
					developer {
						id 'joel'
						name 'Joel HÃ¥kansson'
					}
				}
			}
		}
	}
}
wrapper {
	distributionType = Wrapper.DistributionType.ALL
}